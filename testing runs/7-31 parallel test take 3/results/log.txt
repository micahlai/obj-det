2024-08-01 15:01:55.137868:iGpu2:[95mNow training [grocery store] : Classes [41][0m
2024-08-01 15:01:55.139743:iGpu2:[96mNow training [unfrozen] for [2] epochs on [grocery store] (1/3)[0m
2024-08-01 15:01:59.450205:iGpu8:[95mNow training [rock paper scissors] : Classes [3][0m
2024-08-01 15:01:59.454276:iGpu8:[96mNow training [unfrozen] for [2] epochs on [rock paper scissors] (1/3)[0m
2024-08-01 15:01:59.798950:iGpu4:[95mNow training [hazard signs] : Classes [43][0m
2024-08-01 15:01:59.800676:iGpu4:[96mNow training [unfrozen] for [2] epochs on [hazard signs] (1/3)[0m
2024-08-01 15:01:59.934303:iGpu5:[95mNow training [construction] : Classes [29][0m
2024-08-01 15:01:59.936487:iGpu5:[96mNow training [unfrozen] for [2] epochs on [construction] (1/3)[0m
2024-08-01 15:02:03.906579:iGpu3:[95mNow training [football] : Classes [3][0m
2024-08-01 15:02:03.908430:iGpu3:[96mNow training [unfrozen] for [2] epochs on [football] (1/3)[0m
2024-08-01 15:02:06.782829:iGpu13:[95mNow training [carbike] : Classes [2][0m
2024-08-01 15:02:06.783817:iGpu13:[96mNow training [unfrozen] for [2] epochs on [carbike] (1/3)[0m
2024-08-01 15:02:14.838631:iGpu8:[93mAn error occured when training [unfrozen] on [rock paper scissors][0m
2024-08-01 15:02:14.841378:iGpu8:[91mCUDA out of memory. Tried to allocate 14.00 MiB (GPU 0; 23.69 GiB total capacity; 370.31 MiB already allocated; 3.12 MiB free; 384.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF[0m
2024-08-01 15:02:14.853736:iGpu8:[96mNow training [first 10] for [2] epochs on [rock paper scissors] (2/3)[0m
2024-08-01 15:02:15.772939:iGpu8:[93mAn error occured when training [first 10] on [rock paper scissors][0m
2024-08-01 15:02:15.774576:iGpu8:[91mCUDA out of memory. Tried to allocate 2.00 MiB (GPU 0; 23.69 GiB total capacity; 323.14 MiB already allocated; 3.12 MiB free; 384.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF[0m
2024-08-01 15:02:15.780739:iGpu8:[96mNow training [13] for [2] epochs on [rock paper scissors] (3/3)[0m
2024-08-01 15:03:21.569020:iGpu3:[93mAn error occured when training [unfrozen] on [football][0m
2024-08-01 15:03:21.570072:iGpu3:[91m'DetMetrics' object has no attribute 'curves_results'. See valid attributes below.

    This class is a utility class for computing detection metrics such as precision, recall, and mean average precision
    (mAP) of an object detection model.

    Args:
        save_dir (Path): A path to the directory where the output plots will be saved. Defaults to current directory.
        plot (bool): A flag that indicates whether to plot precision-recall curves for each class. Defaults to False.
        on_plot (func): An optional callback to pass plots path and data when they are rendered. Defaults to None.
        names (tuple of str): A tuple of strings that represents the names of the classes. Defaults to an empty tuple.

    Attributes:
        save_dir (Path): A path to the directory where the output plots will be saved.
        plot (bool): A flag that indicates whether to plot the precision-recall curves for each class.
        on_plot (func): An optional callback to pass plots path and data when they are rendered.
        names (tuple of str): A tuple of strings that represents the names of the classes.
        box (Metric): An instance of the Metric class for storing the results of the detection metrics.
        speed (dict): A dictionary for storing the execution time of different parts of the detection process.

    Methods:
        process(tp, conf, pred_cls, target_cls): Updates the metric results with the latest batch of predictions.
        keys: Returns a list of keys for accessing the computed detection metrics.
        mean_results: Returns a list of mean values for the computed detection metrics.
        class_result(i): Returns a list of values for the computed detection metrics for a specific class.
        maps: Returns a dictionary of mean average precision (mAP) values for different IoU thresholds.
        fitness: Computes the fitness score based on the computed detection metrics.
        ap_class_index: Returns a list of class indices sorted by their average precision (AP) values.
        results_dict: Returns a dictionary that maps detection metric keys to their computed values.
        curves: TODO
        curves_results: TODO
    [0m
2024-08-01 15:03:21.572705:iGpu3:[96mNow training [first 10] for [2] epochs on [football] (2/3)[0m
2024-08-01 15:04:12.349787:iGpu8:[93mAn error occured when training [13] on [rock paper scissors][0m
2024-08-01 15:04:12.350674:iGpu8:[91mCUDA out of memory. Tried to allocate 2.00 MiB (GPU 0; 23.69 GiB total capacity; 365.04 MiB already allocated; 3.12 MiB free; 384.00 MiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF[0m
2024-08-01 15:04:12.356279:iGpu8:[94mFinished testing [rock paper scissors][0m
2024-08-01 15:04:12.358189:iGpu8:[1mFinished testing all datasets in [0.03829926470915476 hours][0m
2024-08-01 15:04:46.691700:iGpu3:[93mAn error occured when training [first 10] on [football][0m
2024-08-01 15:04:46.692688:iGpu3:[91m'DetMetrics' object has no attribute 'curves_results'. See valid attributes below.

    This class is a utility class for computing detection metrics such as precision, recall, and mean average precision
    (mAP) of an object detection model.

    Args:
        save_dir (Path): A path to the directory where the output plots will be saved. Defaults to current directory.
        plot (bool): A flag that indicates whether to plot precision-recall curves for each class. Defaults to False.
        on_plot (func): An optional callback to pass plots path and data when they are rendered. Defaults to None.
        names (tuple of str): A tuple of strings that represents the names of the classes. Defaults to an empty tuple.

    Attributes:
        save_dir (Path): A path to the directory where the output plots will be saved.
        plot (bool): A flag that indicates whether to plot the precision-recall curves for each class.
        on_plot (func): An optional callback to pass plots path and data when they are rendered.
        names (tuple of str): A tuple of strings that represents the names of the classes.
        box (Metric): An instance of the Metric class for storing the results of the detection metrics.
        speed (dict): A dictionary for storing the execution time of different parts of the detection process.

    Methods:
        process(tp, conf, pred_cls, target_cls): Updates the metric results with the latest batch of predictions.
        keys: Returns a list of keys for accessing the computed detection metrics.
        mean_results: Returns a list of mean values for the computed detection metrics.
        class_result(i): Returns a list of values for the computed detection metrics for a specific class.
        maps: Returns a dictionary of mean average precision (mAP) values for different IoU thresholds.
        fitness: Computes the fitness score based on the computed detection metrics.
        ap_class_index: Returns a list of class indices sorted by their average precision (AP) values.
        results_dict: Returns a dictionary that maps detection metric keys to their computed values.
        curves: TODO
        curves_results: TODO
    [0m
2024-08-01 15:04:46.695183:iGpu3:[96mNow training [13] for [2] epochs on [football] (3/3)[0m
2024-08-01 15:07:09.285765:iGpu3:[93mAn error occured when training [13] on [football][0m
2024-08-01 15:07:09.286601:iGpu3:[91m'DetMetrics' object has no attribute 'curves_results'. See valid attributes below.

    This class is a utility class for computing detection metrics such as precision, recall, and mean average precision
    (mAP) of an object detection model.

    Args:
        save_dir (Path): A path to the directory where the output plots will be saved. Defaults to current directory.
        plot (bool): A flag that indicates whether to plot precision-recall curves for each class. Defaults to False.
        on_plot (func): An optional callback to pass plots path and data when they are rendered. Defaults to None.
        names (tuple of str): A tuple of strings that represents the names of the classes. Defaults to an empty tuple.

    Attributes:
        save_dir (Path): A path to the directory where the output plots will be saved.
        plot (bool): A flag that indicates whether to plot the precision-recall curves for each class.
        on_plot (func): An optional callback to pass plots path and data when they are rendered.
        names (tuple of str): A tuple of strings that represents the names of the classes.
        box (Metric): An instance of the Metric class for storing the results of the detection metrics.
        speed (dict): A dictionary for storing the execution time of different parts of the detection process.

    Methods:
        process(tp, conf, pred_cls, target_cls): Updates the metric results with the latest batch of predictions.
        keys: Returns a list of keys for accessing the computed detection metrics.
        mean_results: Returns a list of mean values for the computed detection metrics.
        class_result(i): Returns a list of values for the computed detection metrics for a specific class.
        maps: Returns a dictionary of mean average precision (mAP) values for different IoU thresholds.
        fitness: Computes the fitness score based on the computed detection metrics.
        ap_class_index: Returns a list of class indices sorted by their average precision (AP) values.
        results_dict: Returns a dictionary that maps detection metric keys to their computed values.
        curves: TODO
        curves_results: TODO
    [0m
2024-08-01 15:07:09.291205:iGpu3:[94mFinished testing [football][0m
2024-08-01 15:07:09.292129:iGpu3:[1mFinished testing all datasets in [0.0872890892955992 hours][0m
2024-08-01 15:13:23.371006:iGpu5:[96mNow training [first 10] for [2] epochs on [construction] (2/3)[0m
2024-08-01 15:16:50.737388:iGpu2:[96mNow training [first 10] for [2] epochs on [grocery store] (2/3)[0m
2024-08-01 15:21:21.435629:iGpu5:[96mNow training [13] for [2] epochs on [construction] (3/3)[0m
2024-08-01 15:30:00.599888:iGpu2:[96mNow training [13] for [2] epochs on [grocery store] (3/3)[0m
2024-08-01 15:30:03.455516:iGpu5:[94mFinished testing [construction][0m
2024-08-01 15:30:03.456278:iGpu5:[1mFinished testing all datasets in [0.4693382790353563 hours][0m
2024-08-01 15:43:36.631156:iGpu2:[94mFinished testing [grocery store][0m
2024-08-01 15:43:36.632067:iGpu2:[1mFinished testing all datasets in [0.6960001289844513 hours][0m
2024-08-01 15:53:37.883341:iGpu4:[96mNow training [first 10] for [2] epochs on [hazard signs] (2/3)[0m
2024-08-01 16:05:38.490211:iGpu4:[93mAn error occured when training [first 10] on [hazard signs][0m
2024-08-01 16:05:38.491960:iGpu4:[91m[Errno 32] Broken pipe[0m
2024-08-01 16:05:38.495193:iGpu4:[96mNow training [13] for [2] epochs on [hazard signs] (3/3)[0m
2024-08-01 16:05:45.675120:iGpu4:[93mAn error occured when training [13] on [hazard signs][0m
2024-08-01 16:05:45.677211:iGpu4:[91m[Errno 32] Broken pipe[0m
2024-08-01 16:05:45.704081:iGpu4:[94mFinished testing [hazard signs][0m
2024-08-01 16:05:45.705727:iGpu4:[1mFinished testing all datasets in [1.0645192954937617 hours][0m
